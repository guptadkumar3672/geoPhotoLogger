# Resolve react_native_pods.rb with node to allow for hoisting
def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Use node_require for react_native_pods.rb and react-native-permissions setup
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

# ⬇️ Uncomment wanted permissions
setup_permissions([
  'Camera',
  'LocationAccuracy',
  'LocationAlways',
  'LocationWhenInUse',
  'MediaLibrary',
  'Notifications',
  'PhotoLibrary',
  'PhotoLibraryAddOnly',
])


# Dynamic linkage fallback if needed
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end




target 'GeoPhotoLogger' do
  config = use_native_modules!

  # React Native Maps dependencies
rn_maps_path = '../node_modules/react-native-maps'
pod 'react-native-maps', :path => rn_maps_path
pod 'react-native-google-maps', :path => rn_maps_path
pod 'react-native-maps-generated', :path => rn_maps_path


# Firebase pods with modular headers
  pod 'Firebase/Analytics', :modular_headers => true
  pod 'Firebase/Auth', :modular_headers => true
  pod 'Firebase/Core', :modular_headers => true
  pod 'Firebase/Firestore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  # pod 'FirebaseCore', :modular_headers => true
  # pod 'FirebaseCoreInternal', :modular_headers => true
  # pod 'FirebaseCoreExtension', :modular_headers => true
  # pod 'FirebaseFirestoreInternal', :modular_headers => true
  pod 'gRPC-Core', :modular_headers => true 
  pod 'gRPC-C++', :modular_headers => true

  # Use static frameworks for React Native Firebase
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'GeoPhotoLoggerTests' do
    inherit! :complete
    # Pods for testing
  end

post_install do |installer|
  # Existing react_native_post_install
  react_native_post_install(
    installer,
    config[:reactNativePath],
    :mac_catalyst_enabled => false,
    # :ccache_enabled => true
  )

 
end
end